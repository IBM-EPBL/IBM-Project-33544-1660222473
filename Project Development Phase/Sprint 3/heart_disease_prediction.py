# -*- coding: utf-8 -*-
"""Heart Disease Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1498PHGVAqRoo3xdIw56LhVAuOCuw9MuH
"""

import pandas as pd
hdp = pd.read_csv('/content/Heart_Disease_Prediction.csv')# Dropping null values
hdp = hdp.dropna()
hdp.head()

hdp['Heart Disease'].value_counts()

from sklearn.model_selection import train_test_split
from imblearn.over_sampling import RandomOverSampler
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score
X = hdp.drop('Heart Disease',axis=1)
y = hdp['Heart Disease']

import numpy as np
from sklearn.ensemble import ExtraTreesClassifier
import matplotlib.pyplot as plt

model = ExtraTreesClassifier()
model.fit(X ,y)
print(model.feature_importances_) #use inbuilt class feature_importances of tree based classifiers
feat_importances = pd.Series(model.feature_importances_, index=X.columns)
feat_importances.nlargest(13).plot(kind='barh')
plt.show()

hdp.drop(['FBS over 120', 'EKG results', 'Sex'], axis = 1, inplace = True)

a = hdp.drop('Heart Disease',axis=1)
b = hdp['Heart Disease']

X_train, X_test, y_train, y_test = train_test_split(a,b,test_size=0.2)
oversample = RandomOverSampler(sampling_strategy='minority')
X_over, y_over = oversample.fit_resample(X_train,y_train)
rf = RandomForestClassifier()
rf.fit(X_over,y_over)
preds = rf.predict(X_test)
print(accuracy_score(y_test,preds))

import joblib
joblib.dump(rf, 'hdp_model.pkl')

hdp.head()

pip install scikit-learn

pip install joblib